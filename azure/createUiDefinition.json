{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "resourceTypes": [
      "microsoft.network/networkinterfaces",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/virtualnetworks",
      "microsoft.network/publicipaddresses",
      "microsoft.compute/virtualmachines",
      "microsoft.resources/resourcegroups"
    ],
    "basics": [
      {
        "name": "namePrefix",
        "type": "Microsoft.Common.TextBox",
        "label": "Resource Name Prefix",
        "defaultValue": "",
        "toolTip": "This value will be used as a base prefix for all resource names, e.g. [namePrefix]-vm.",
        "constraints": {
          "required": true,
          "regex": "",
          "validationMessage": ""
        },
        "visible": true
      },
      {
        "name": "vmSize",
        "type": "Microsoft.Compute.SizeSelector",
        "label": "Virtual Machine Size",
        "toolTip": "The size of the virtual machine.",
        "constraints": {
          "required": true
        },
        "recommendedSizes": [
          "Standard_B2s",
          "Standard_D2s_v3"
        ],
        "osPlatform": "Linux",
        "imageReference": {
          "publisher": "refactr",
          "offer": "refactr-runner-image",
          "sku": "refactr-runner-image-centos8"
        },
        "count": 1,
        "visible": true
      },
      {
        "name": "adminUsername",
        "type": "Microsoft.Compute.UserNameTextBox",
        "label": "User Name",
        "defaultValue": "",
        "toolTip": "",
        "constraints": {
          "required": true,
          "regex": "^[a-z0-9A-Z]{1,30}$",
          "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-30 characters long."
        },
        "osPlatform": "Linux",
        "visible": true
      },
      {
        "name": "linuxCredentials",
        "type": "Microsoft.Compute.CredentialsCombo",
        "label": {
          "authenticationType": "Authentication Type",
          "password": "Password",
          "confirmPassword": "Confirm Password",
          "sshPublicKey": "SSH Public Key"
        },
        "toolTip": {
          "authenticationType": "",
          "password": "",
          "sshPublicKey": ""
        },
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": false,
          "hidePassword": false
        },
        "osPlatform": "Linux",
        "visible": true
      },
      {
        "name": "agentId",
        "type": "Microsoft.Common.TextBox",
        "label": "Runner Agent ID",
        "defaultValue": "",
        "toolTip": "Refactr Agent ID. This value can be retrieved from the Refactr application.",
        "constraints": {
          "required": true,
          "regex": "",
          "validationMessage": ""
        },
        "visible": true
      },
      {
        "name": "agentKey",
        "type": "Microsoft.Common.PasswordBox",
        "label": {
          "password": "Runner Agent Key",
          "confirmPassword": "Confirm Refactr Agent Key"
        },
        "toolTip": "Refactr Agent Key. This value can be retrieved from the Refactr application.",
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": true
        },
        "visible": true
      },
      {
        "name": "agentApiBaseUrl",
        "type": "Microsoft.Common.TextBox",
        "label": "Refactr Agent API URL",
        "defaultValue": "https://agent-api.refactr.it/v1",
        "toolTip": "Refactr Agent API base URL",
        "constraints": {
          "required": false
        },
        "visible": false
      }
    ],
    "steps": [],
    "outputs": {
      "namePrefix": "[basics('namePrefix')]",
      "vmSize": "[basics('vmSize')]",
      "adminUsername": "[basics('adminUsername')]",
      "authenticationType": "[basics('linuxCredentials').authenticationType]",
      "adminPasswordOrKey": "[if(equals(basics('linuxCredentials').authenticationType, 'sshPublicKey'), basics('linuxCredentials').sshPublicKey, basics('linuxCredentials').password)]",
      "agentId": "[basics('agentId')]",
      "agentKey": "[basics('agentKey')]",
      "agentApiBaseUrl": "[basics('agentApiBaseUrl')]"
    }
  }
}